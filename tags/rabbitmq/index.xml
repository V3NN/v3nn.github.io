<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>RabbitMQ - Tag - V3NN</title>
        <link>http://example.org/tags/rabbitmq/</link>
        <description>RabbitMQ - Tag - V3NN</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 01 Jul 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/rabbitmq/" rel="self" type="application/rss+xml" /><item>
    <title>RabbitMQ 系列1</title>
    <link>http://example.org/posts/rabbitmq/one/</link>
    <pubDate>Mon, 01 Jul 2024 00:00:00 &#43;0000</pubDate>
    <author>v3nn</author>
    <guid>http://example.org/posts/rabbitmq/one/</guid>
    <description><![CDATA[1 概述 RabbitMQ 是由 erlang 语言开发，基于AMQP（Advanced Message Queue 高级消息队列协议）协议实现的消息队列，它是一种应用程序之间的通信方法，消息队列在分布式系统开发中应用非常广泛。
2 基本概念 2.1 基本结构 Producer 消息生产者，即生产方客户端，生产方客户端将消息发送。
Connection 生产者和消费者，需要与 Broker 建立连接，也就是 Connection, 一旦连接建立起来，客户端会创建一个AMQP 信道，也就是 channel。信道是建立在Connection 之上的虚拟连接，Broken处理的每条AMQP 指定都是通过信道channel完成的。
Broker 消息队列服务进程，此进程包括两个部分：Exchange 和 Queue
Exchange
消息队列交换机，按一定的规则将消息路由转发到某个队列，对消息进行过虑。 交换机支持多种类型，每种类型都用于不同的消息路由和分发策略。
Direct Exchange： 这种交换机根据消息的路由键（Routing Key）将消息发送到与之完全匹配的队列。只有当消息的路由键与队列绑定时指定的路由键完全相同时，消息才会被路由到队列。这是一种简单的路由策略，适用于点对点通信。
Topic Exchange：这种交换机根据消息的路由键与队列绑定时指定的路由键模式（通配符）匹配程度，将消息路由到一个或多个队列。路由键可以使用通配符符号 *（匹配一个单词）和 #（匹配零个或多个单词），允许更灵活的消息路由。用于发布/订阅模式和复杂的消息路由需求。
Headers Exchange：这种交换机根据消息的标头信息（Headers）来决定消息的路由，而不是使用路由键。队列和交换机之间的绑定规则是根据标头键值对来定义的，只有当消息的标头与绑定规则完全匹配时，消息才会被路由到队列。适用于需要复杂消息匹配的场景。
Fanout Exchange：这种交换机将消息广播到与之绑定的所有队列，无论消息的路由键是什么。
Default Exchange：这是默认实现的一种交换机，它不需要手动创建。当消息发布到默认交换机时，路由键会被解释为队列的名称，消息会被路由到与路由键名称相同的队列。默认交换机通常用于点对点通信，但不支持复杂的路由策略。
Queue
消息队列，存储消息的队列，消息到达队列并转发给指定的消费者。
Consumer 消息消费者，即消费方客户端，接收 Broker 转发的消息。
2.2 工作流程 如上图所示，蓝色的圈圈就是我们的消息推送服务，将消息推送到中间方框里面也就是 RabbitMQ的服务器，然后经过服务器里面的Exchange、queue等各种关系将数据处理入列后，最终右边的绿色圈圈消费者获取对应监听的消息。
生产者：
1、生产者和Broker建立TCP连接。 2、生产者和Broker建立通道。 3、生产者通过通道消息发送给Broker，由Exchange将消息进行转发。 4、Exchange将消息转发到指定的Queue
消费者：
1、消费者和 Broker 建立 TCP 连接 2、消费者和 Broker 建立通道 3、消费者监听指定的Queue 4、当有消息到达 Queue 时 Broker 默认将消息推送给消费者。 5、消费者接收到消息。 6、ack回复]]></description>
</item>
</channel>
</rss>
